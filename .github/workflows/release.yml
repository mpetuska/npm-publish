name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Package version to publish under
      skipGradlePluginPortal:
        description: Should we skip publishing to Gradle Plugin Portal
        required: false
        default: "true"
      skipGitHub:
        description: Should we skip publishing to GitHub
        required: false
        default: "true"
      skipMavenCentral:
        description: Should we skip publishing to Maven Central
        required: false
        default: "true"
  release:
    types: [ created ]

env:
  VERSION: ${{ github.event.release.tag_name }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Check with gradle
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew check
      - name: Publish Pages
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew dokkaHtml -Pversion=${VERSION//v};
          cp -avr npm-publish-gradle-plugin/build/dokka/html/ public;
          find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec gzip -f -k {} \;
          echo '/npm-publish /npm-publish/npm-publish/index.html 301' > public/_redirects;
          echo '/npm-publish/index.html /npm-publish/npm-publish/index.html 301' >> public/_redirects;
      - uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ github.token }}

  release-GradlePluginPortal:
    name: "Release: GradlePluginPortal"
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ github.event.inputs.skipGradlePluginPortal != 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish to Gradle Plugin Portal
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishPlugins -Pgradle.publish.key="${{ secrets.GRADLE_PUBLISH_KEY }}" -Pgradle.publish.secret="${{ secrets.GRADLE_PUBLISH_SECRET }}" -Pversion=${VERSION//v}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}


  release-GitHub:
    name: "Release: GitHub"
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ github.event.inputs.skipGitHub != 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish to GitHub Packages
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishAllPublicationsToGitHubRepository -Pversion=${VERSION//v}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          GH_USERNAME: ${{ github.actor }}
          GH_PASSWORD: ${{ github.token }}

  release-MavenCentral:
    name: "Release: MavenCentral"
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ github.event.inputs.skipMavenCentral != 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish to GitHub Packages
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Pversion=${VERSION//v}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
